worker_processes auto;
error_log  /var/log/nginx/error.log info;
events {
    worker_connections  2048;
    use epoll;
    multi_accept on;
}

http {
    #include	  /etc/nginx/naxsi/*;
    include       mime.types;
    default_type  text/html;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    off;
    send_timeout   30;

    keepalive_timeout  65;
    keepalive_requests 200;
    reset_timedout_connection on;

    server_tokens off;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;

    gzip on;
    gzip_min_length 256;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        application/x-javascript
        text/xml
        application/xml
        application/xml+rss
        image/x-icon
        text/javascript;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;

    proxy_redirect          off;
    proxy_set_header        Host            $host;
    proxy_set_header        X-Real-IP       $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    client_max_body_size    10m;
    client_body_buffer_size 128k;
    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      300;
    proxy_buffers           32 4k;

    #websockets
    map $http_upgrade $connection_upgrade {
    	default upgrade;
    	'' close;
    }

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_set_header X-Graylog-Server-URL http://$host/api;

    server {
      listen 80 default_server;
      location / {
        proxy_pass http://127.0.0.1:9000;
      }
      location /api/ {
        proxy_pass http://127.0.0.1:12900/;
      }
      location /api-browser {
        proxy_pass http://127.0.0.1:12900;
      }

    }
}
